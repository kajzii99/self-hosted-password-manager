@using Microsoft.AspNetCore.Identity
@model SelfHostedPasswordManager.Models.Credential

@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<script src="js/password-handler.js"></script>

<h4>Credentials</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Website" class="control-label"></label>
                <input asp-for="Website" autocomplete="off" class="form-control" />
                <span asp-validation-for="Website" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" autocomplete="off" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" type="password" class="form-control" value="@Model.Password" id="password" />
                <input type="button" id="show-password" value="Show password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes" class="control-label"></label>
                <input asp-for="Notes" autocomplete="off" class="form-control" />
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
